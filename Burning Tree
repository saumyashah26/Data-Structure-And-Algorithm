//Given a binary tree and a leaf node called target. Find the minimum time required to burn the complete binary tree if the target is set on fire 
//Time O(n) and space O(h)[recursion]
class Solution {
    
    int ans;
    //{isPresent,time,height}
    vector<int> solve(Node* root,int target){
        if(root==NULL){
            return {0,0,0};
        }
        if(root->data==target){
            return {1,1,0};
        }
        vector<int> l=solve(root->left,target);
        vector<int> r=solve(root->right,target);
        int h=max(l[2],r[2]);
        if(l[0]==1){
            ans=max(ans,l[1]+r[2]);
            return {1,l[1]+1,h+1};
        }
        if(r[0]==1){
            ans=max(ans,r[1]+l[2]);
            return {1,r[1]+1,h+1};
        }
        return {0,0,h+1};
    }
    
    public:
    int minTime(Node* root, int target) 
    {
        ans=0;
        solve(root,target);
        return ans;
    }
};
